from .config import Field
from typing import Any, Optional

class ConfigField(Field):
    def __init__(self, doc: Any, dtype: Any, default: Optional[Any] = ..., check: Optional[Any] = ..., deprecated: Optional[Any] = ...) -> None: ...
    def __get__(self, instance: Any, owner: Optional[Any] = ...): ...
    def __set__(self, instance: Any, value: Any, at: Optional[Any] = ..., label: str = ...) -> None: ...
    def rename(self, instance: Any) -> None: ...
    def save(self, outfile: Any, instance: Any) -> None: ...
    def freeze(self, instance: Any) -> None: ...
    def toDict(self, instance: Any): ...
    def validate(self, instance: Any) -> None: ...
