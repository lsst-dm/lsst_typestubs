from typing import Any, Optional

class Mosaic:
    gutter: Any = ...
    background: Any = ...
    xsize: int = ...
    ysize: int = ...
    def __init__(self, gutter: int = ..., background: int = ..., mode: str = ...) -> None: ...
    images: Any = ...
    labels: Any = ...
    def reset(self) -> None: ...
    def append(self, image: Any, label: Optional[Any] = ..., ctype: Optional[Any] = ...): ...
    def makeMosaic(self, images: Optional[Any] = ..., display: str = ..., mode: Optional[Any] = ..., background: Optional[Any] = ..., title: str = ...): ...
    def setGutter(self, gutter: Any) -> None: ...
    def setBackground(self, background: Any) -> None: ...
    mode: Any = ...
    def setMode(self, mode: Any) -> None: ...
    def getBBox(self, ix: Any, iy: Optional[Any] = ...): ...
    def drawLabels(self, labels: Optional[Any] = ..., display: str = ..., frame: Optional[Any] = ...) -> None: ...
    @property
    def nImage(self): ...

def drawBBox(bbox: Any, borderWidth: float = ..., origin: Optional[Any] = ..., display: str = ..., ctype: Optional[Any] = ..., bin: int = ..., frame: Optional[Any] = ...) -> None: ...
def drawFootprint(foot: Any, borderWidth: float = ..., origin: Optional[Any] = ..., XY0: Optional[Any] = ..., frame: Optional[Any] = ..., ctype: Optional[Any] = ..., bin: int = ..., peaks: bool = ..., symb: str = ..., size: float = ..., ctypePeak: Optional[Any] = ..., display: str = ...) -> None: ...
def drawCoaddInputs(exposure: Any, frame: Optional[Any] = ..., ctype: Optional[Any] = ..., bin: int = ..., display: str = ...) -> None: ...
