from ._schema import Field as Field, Schema as Schema
from ._table import SchemaMapper as SchemaMapper
from lsst.utils import continueClass as continueClass
from typing import Any, Optional

class SchemaMapper:
    def addOutputField(self, field: Any, type: Optional[Any] = ..., doc: Optional[Any] = ..., units: str = ..., size: Optional[Any] = ..., doReplace: bool = ..., parse_strict: str = ...): ...
    def addMapping(self, input: Any, output: Optional[Any] = ..., doReplace: bool = ...): ...
    def __eq__(self, other: Any) -> Any: ...
    def __reduce__(self): ...

def makeSchemaMapper(input: Any, output: Any, mappings: Any): ...
