from typing import Any

class TractInfo:
    def __init__(self, id: Any, patchInnerDimensions: Any, patchBorder: Any, ctrCoord: Any, vertexCoordList: Any, tractOverlap: Any, wcs: Any) -> None: ...
    def getSequentialPatchIndex(self, patchInfo: Any): ...
    def getPatchIndexPair(self, sequentialIndex: Any): ...
    def findPatch(self, coord: Any): ...
    def findPatchList(self, coordList: Any): ...
    def getBBox(self): ...
    def getCtrCoord(self): ...
    def getId(self): ...
    def getNumPatches(self): ...
    def getPatchBorder(self): ...
    def getPatchInfo(self, index: Any): ...
    def getPatchInnerDimensions(self): ...
    def getTractOverlap(self): ...
    def getVertexList(self): ...
    def getInnerSkyPolygon(self): ...
    def getOuterSkyPolygon(self): ...
    def getWcs(self): ...
    def __iter__(self) -> Any: ...
    def __len__(self): ...
    def __getitem__(self, index: Any): ...
    def contains(self, coord: Any): ...

class ExplicitTractInfo(TractInfo):
    def __init__(self, ident: Any, patchInnerDimensions: Any, patchBorder: Any, ctrCoord: Any, radius: Any, tractOverlap: Any, wcs: Any) -> None: ...
