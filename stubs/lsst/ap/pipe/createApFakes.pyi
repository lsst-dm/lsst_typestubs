from lsst.pipe.base import PipelineTask, PipelineTaskConnections
from lsst.pipe.tasks.insertFakes import InsertFakesConfig
from typing import Any

class CreateRandomApFakesConnections(PipelineTaskConnections):
    skyMap: Any = ...
    fakeCat: Any = ...

class CreateRandomApFakesConfig(InsertFakesConfig):
    fakeDensity: Any = ...
    filterSet: Any = ...
    fraction: Any = ...
    magMin: Any = ...
    magMax: Any = ...
    randomSeed: Any = ...
    visitSourceFlagCol: Any = ...
    templateSourceFlagCol: Any = ...

class CreateRandomApFakesTask(PipelineTask):
    ConfigClass: Any = ...
    def runQuantum(self, butlerQC: Any, inputRefs: Any, outputRefs: Any) -> None: ...
    def run(self, tractId: Any, skyMap: Any): ...
    def createRandomPositions(self, nFakes: Any, boundingCircle: Any, rng: Any): ...
    def createVisitCoaddSubdivision(self, nFakes: Any): ...
    def createRandomMagnitudes(self, nFakes: Any, rng: Any): ...
