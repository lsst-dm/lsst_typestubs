from .printers_oldgdb import *
import gdb.printing
import optparse
from typing import Any, Optional

debug: bool
argparse: Any

class GdbOptionParser(optparse.OptionParser):
    def __init__(self, prog: Any, *args: Any, **kwargs: Any) -> None: ...
    def parse_args(self, args: Any, values: Optional[Any] = ...): ...
    def exit(self, status: int = ..., msg: str = ...) -> None: ...

class SharedPtrPrinter:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class GilPixelPrinter:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

def getEigenMatrixDimensions(val: Any): ...
def getEigenValue(var: Any, x: Any, y: int = ...): ...

class EigenMatrixPrinter:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class EigenVectorPrinter:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class PrintEigenCommand(gdb.Command):
    def __init__(self) -> None: ...
    def invoke(self, args: Any, fromTty: Any) -> None: ...

class BaseSourceAttributesPrinter:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class SourcePrinter:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class DetectorPrinter:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class FootprintPrinter:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class FootprintSetPrinter:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class PeakPrinter:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class PsfPrinter:
    def to_string(self): ...

class Box2Printer:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...
    def display_hint(self): ...

class CoordinateBasePrinter:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...
    def display_hint(self): ...

class AxesPrinter:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class QuadrupolePrinter:
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class ImagePrinter:
    def dimenStr(self, val: Optional[Any] = ...): ...
    def typeName(self): ...
    typename: Any = ...
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class MaskedImagePrinter(ImagePrinter):
    def to_string(self): ...

class ExposurePrinter(ImagePrinter):
    def to_string(self): ...

class PrintImageCommand(gdb.Command):
    def __init__(self) -> None: ...
    def get(self, var: Any, x: Any, y: Any): ...
    def invoke(self, args: Any, fromTty: Any) -> None: ...

class BackgroundPrinter:
    typename: Any = ...
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class BackgroundControlPrinter:
    typename: Any = ...
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class KernelPrinter:
    typename: Any = ...
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class StatisticsControlPrinter:
    typename: Any = ...
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class TablePrinter:
    typename: Any = ...
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

class TableSchemaPrinter:
    typename: Any = ...
    val: Any = ...
    def __init__(self, val: Any) -> None: ...
    def to_string(self): ...

printers: Any

def register(obj: Optional[Any] = ...) -> None: ...
def build_boost_dictionary(): ...
def build_eigen_dictionary(): ...
def build_afw_dictionary(): ...
def build_daf_base_dictionary(): ...
