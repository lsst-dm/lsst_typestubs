from lsst.daf.persistence.registries import PgsqlRegistry as PgsqlRegistry
from lsst.pex.config import ConfigurableField as ConfigurableField
from lsst.pipe.tasks.ingest import IngestConfig as IngestConfig, IngestTask as IngestTask, RegisterTask as RegisterTask, RegistryContext as RegistryContext, fakeContext as fakeContext
from typing import Any, Optional

havePgSql: bool

class PgsqlRegistryContext(RegistryContext):
    registryName: Any = ...
    conn: Any = ...
    def __init__(self, registryName: Any, createTableFunc: Any, forceCreateTables: Any) -> None: ...
    def __exit__(self, excType: Any, excValue: Any, traceback: Any): ...

class PgsqlRegisterTask(RegisterTask):
    placeHolder: str = ...
    def openRegistry(self, directory: Any, create: bool = ..., dryrun: bool = ...): ...
    def createTable(self, conn: Any, table: Optional[Any] = ...) -> None: ...

class PgsqlIngestConfig(IngestConfig):
    register: Any = ...

class PgsqlIngestTask(IngestTask):
    ConfigClass: Any = ...
