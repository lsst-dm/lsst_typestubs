from lsst.coadd.utils import ExistingCoaddDataIdContainer as ExistingCoaddDataIdContainer
from lsst.pex.config import Config as Config, RangeField as RangeField
from lsst.pipe.base import ArgumentParser as ArgumentParser, TaskRunner as TaskRunner
from typing import Any, Optional

class MergeSourcesRunner(TaskRunner):
    def makeTask(self, parsedCmd: Optional[Any] = ..., args: Optional[Any] = ...): ...
    @staticmethod
    def buildRefDict(parsedCmd: Any): ...
    @staticmethod
    def getTargetList(parsedCmd: Any, **kwargs: Any): ...

def makeMergeArgumentParser(name: Any, dataset: Any): ...
def getInputSchema(task: Any, butler: Optional[Any] = ..., schema: Optional[Any] = ...): ...
def getShortFilterName(name: Any): ...
def readCatalog(task: Any, patchRef: Any): ...

class CullPeaksConfig(Config):
    nBandsSufficient: Any = ...
    rankSufficient: Any = ...
    rankConsidered: Any = ...
    rankNormalizedConsidered: Any = ...
