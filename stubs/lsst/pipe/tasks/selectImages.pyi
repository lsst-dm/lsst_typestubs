import lsst.pipe.base as pexConfig
import lsst.pipe.base as pipeBase
from typing import Any, Optional

class DatabaseSelectImagesConfig(pexConfig.Config):
    host: Any = ...
    port: Any = ...
    database: Any = ...
    maxExposures: Any = ...

class BaseExposureInfo(pipeBase.Struct):
    def __init__(self, dataId: Any, coordList: Any) -> None: ...

class BaseSelectImagesTask(pipeBase.Task):
    ConfigClass: Any = ...
    def run(self, coordList: Any) -> None: ...
    def runDataRef(self, dataRef: Any, coordList: Any, makeDataRefList: bool = ..., selectDataList: Any = ...): ...

class SelectStruct(pipeBase.Struct):
    def __init__(self, dataRef: Any, wcs: Any, bbox: Any) -> None: ...

class WcsSelectImagesTask(BaseSelectImagesTask):
    def runDataRef(self, dataRef: Any, coordList: Any, makeDataRefList: bool = ..., selectDataList: Any = ...): ...

class PsfWcsSelectImagesConfig(pexConfig.Config):
    maxEllipResidual: Any = ...
    maxSizeScatter: Any = ...
    maxScaledSizeScatter: Any = ...
    starSelection: Any = ...
    starShape: Any = ...
    psfShape: Any = ...

class PsfWcsSelectImagesTask(WcsSelectImagesTask):
    ConfigClass: Any = ...
    def runDataRef(self, dataRef: Any, coordList: Any, makeDataRefList: bool = ..., selectDataList: Any = ...): ...

class BestSeeingWcsSelectImageConfig(WcsSelectImagesTask.ConfigClass):
    nImagesMax: Any = ...
    maxPsfFwhm: Any = ...
    minPsfFwhm: Any = ...

class BestSeeingWcsSelectImagesTask(WcsSelectImagesTask):
    ConfigClass: Any = ...
    def runDataRef(self, dataRef: Any, coordList: Any, makeDataRefList: bool = ..., selectDataList: Optional[Any] = ...): ...
