import lsst.pipe.base as pexConfig
import lsst.pipe.base as pipeBase
from typing import Any, Optional

class MatchBackgroundsConfig(pexConfig.Config):
    usePolynomial: Any = ...
    order: Any = ...
    badMaskPlanes: Any = ...
    gridStatistic: Any = ...
    undersampleStyle: Any = ...
    binSize: Any = ...
    interpStyle: Any = ...
    numSigmaClip: Any = ...
    numIter: Any = ...
    bestRefWeightCoverage: Any = ...
    bestRefWeightVariance: Any = ...
    bestRefWeightLevel: Any = ...
    approxWeighting: Any = ...
    gridStdevEpsilon: Any = ...

class MatchBackgroundsTask(pipeBase.Task):
    ConfigClass: Any = ...
    sctrl: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    debugDataIdString: Any = ...
    def run(self, expRefList: Any, expDatasetType: Any, imageScalerList: Optional[Any] = ..., refExpDataRef: Optional[Any] = ..., refImageScaler: Optional[Any] = ...): ...
    def selectRefExposure(self, expRefList: Any, imageScalerList: Any, expDatasetType: Any): ...
    def matchBackgrounds(self, refExposure: Any, sciExposure: Any): ...

class DataRefMatcher:
    def __init__(self, butler: Any, datasetType: Any) -> None: ...
    def isMatch(self, ref0: Any, ref1: Any): ...
    def matchList(self, ref0: Any, refList: Any): ...
