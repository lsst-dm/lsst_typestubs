from lsst.pipe.base import PipelineTask, PipelineTaskConfig, PipelineTaskConnections
from typing import Any, Optional

class DeblendCoaddSourceSingleConnections(PipelineTaskConnections):
    inputSchema: Any = ...
    peakSchema: Any = ...
    mergedDetections: Any = ...
    coadd: Any = ...
    measureCatalog: Any = ...
    outputSchema: Any = ...
    def setDefaults(self) -> None: ...

class DeblendCoaddSourcesSingleConfig(PipelineTaskConfig):
    singleBandDeblend: Any = ...

class DeblendCoaddSourcesMultiConnections(PipelineTaskConnections):
    inputSchema: Any = ...
    peakSchema: Any = ...
    mergedDetections: Any = ...
    coadds: Any = ...
    outputSchema: Any = ...
    fluxCatalogs: Any = ...
    templateCatalogs: Any = ...
    def __init__(self, *, config: Optional[Any] = ...) -> None: ...

class DeblendCoaddSourcesMultiConfig(PipelineTaskConfig):
    multibandDeblend: Any = ...

class DeblendCoaddSourcesBaseTask(PipelineTask):
    peakSchema: Any = ...
    schemaMapper: Any = ...
    schema: Any = ...
    def __init__(self, initInputs: Any, **kwargs: Any) -> None: ...
    def runQuantum(self, butlerQC: Any, inputRefs: Any, outputRefs: Any) -> None: ...

class DeblendCoaddSourcesSingleTask(DeblendCoaddSourcesBaseTask):
    ConfigClass: Any = ...
    outputSchema: Any = ...
    def __init__(self, initInputs: Any, **kwargs: Any) -> None: ...
    def run(self, coadd: Any, mergedDetections: Any, idFactory: Any): ...

class DeblendCoaddSourcesMultiTask(DeblendCoaddSourcesBaseTask):
    ConfigClass: Any = ...
    outputSchema: Any = ...
    def __init__(self, initInputs: Any, **kwargs: Any) -> None: ...
    def runQuantum(self, butlerQC: Any, inputRefs: Any, outputRefs: Any) -> None: ...
    def run(self, coadds: Any, filters: Any, mergedDetections: Any, idFactory: Any): ...
