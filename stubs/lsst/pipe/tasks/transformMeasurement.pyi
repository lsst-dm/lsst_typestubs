import lsst.pipe.base as pexConfig
import lsst.pipe.base as pipeBase
from typing import Any

def makeContiguous(catalog: Any): ...

class TransformConfig(pexConfig.Config):
    copyFields: Any = ...

class TransformTask(pipeBase.Task):
    ConfigClass: Any = ...
    outputDataset: Any = ...
    mapper: Any = ...
    transforms: Any = ...
    def __init__(self, measConfig: Any, inputSchema: Any, outputDataset: Any, *args: Any, **kwargs: Any) -> None: ...
    def getSchemaCatalogs(self): ...
    def run(self, inputCat: Any, wcs: Any, photoCalib: Any): ...

class RunTransformConfig(pexConfig.Config):
    transform: Any = ...
    inputConfigType: Any = ...

class RunTransformTaskBase(pipeBase.CmdLineTask):
    RunnerClass: Any = ...
    ConfigClass: Any = ...
    sourceType: Any = ...
    calexpType: Any = ...
    @property
    def inputSchemaType(self): ...
    @property
    def outputDataset(self): ...
    @property
    def measurementConfig(self): ...
    butler: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def runDataRef(self, dataRef: Any): ...

class SrcTransformTask(RunTransformTaskBase):
    sourceType: str = ...
    calexpType: str = ...
    @property
    def measurementConfig(self): ...

class ForcedSrcTransformTask(RunTransformTaskBase):
    sourceType: str = ...
    calexpType: str = ...

class CoaddSrcTransformTask(RunTransformTaskBase):
    @property
    def coaddName(self): ...
    @property
    def sourceType(self): ...
    @property
    def calexpType(self): ...
