import lsst.pipe.base as pexConfig
import lsst.pipe.base as pipeBase
from typing import Any, Optional

class InterpImageConfig(pexConfig.Config):
    modelPsf: Any = ...
    useFallbackValueAtEdge: Any = ...
    fallbackValueType: Any = ...
    fallbackUserValue: Any = ...
    negativeFallbackAllowed: Any = ...
    transpose: Any = ...
    def validate(self) -> None: ...

class InterpImageTask(pipeBase.Task):
    ConfigClass: Any = ...
    def run(self, image: Any, planeName: Optional[Any] = ..., fwhmPixels: Optional[Any] = ..., defects: Optional[Any] = ...) -> None: ...
    def transposeContext(self, maskedImage: Any, defects: Any): ...
    def interpolateImage(self, maskedImage: Any, psf: Any, defectList: Any, fallbackValue: Any) -> None: ...
