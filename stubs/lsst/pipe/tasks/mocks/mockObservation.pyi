import lsst.pipe.base
from lsst.afw.cameraGeom import FOCAL_PLANE as FOCAL_PLANE, PIXELS as PIXELS
from lsst.meas.algorithms.testUtils import makeRandomTransmissionCurve as makeRandomTransmissionCurve
from lsst.meas.base.apCorrRegistry import getApCorrNameSet as getApCorrNameSet
from typing import Any, Optional

class MockObservationConfig(lsst.pex.config.Config):
    pixelScale: Any = ...
    doRotate: Any = ...
    fluxMag0: Any = ...
    fluxMag0Err: Any = ...
    expTime: Any = ...
    psfImageSize: Any = ...
    psfMinSigma: Any = ...
    psfMaxSigma: Any = ...
    apCorrOrder: Any = ...
    seed: Any = ...

class MockObservationTask(lsst.pipe.base.Task):
    ConfigClass: Any = ...
    schema: Any = ...
    ccdKey: Any = ...
    visitKey: Any = ...
    pointingKey: Any = ...
    filterKey: Any = ...
    rng: Any = ...
    def __init__(self, **kwds: Any) -> None: ...
    def run(self, butler: Any, n: Any, tractInfo: Any, camera: Any, catalog: Optional[Any] = ...): ...
    def makePointings(self, n: Any, tractInfo: Any) -> None: ...
    def buildWcs(self, position: Any, pa: Any, detector: Any): ...
    def buildPhotoCalib(self): ...
    def buildPsf(self, detector: Any): ...
    def buildApCorrMap(self, detector: Any): ...
    def buildTransmissionCurve(self, detector: Any): ...
