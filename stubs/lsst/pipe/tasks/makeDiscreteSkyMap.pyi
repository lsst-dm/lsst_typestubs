import lsst.pipe.base as pexConfig
import lsst.pipe.base as pipeBase
from lsst.pipe.base import ArgumentParser as ArgumentParser
from lsst.skymap import BaseSkyMap as BaseSkyMap, DiscreteSkyMap as DiscreteSkyMap
from typing import Any, Optional

class MakeDiscreteSkyMapConfig(pexConfig.Config):
    coaddName: Any = ...
    skyMap: Any = ...
    borderSize: Any = ...
    doAppend: Any = ...
    doWrite: Any = ...
    def setDefaults(self) -> None: ...

class MakeDiscreteSkyMapRunner(pipeBase.TaskRunner):
    @staticmethod
    def getTargetList(parsedCmd: Any): ...
    def __call__(self, args: Any): ...

class MakeDiscreteSkyMapTask(pipeBase.CmdLineTask):
    ConfigClass: Any = ...
    RunnerClass: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def runDataRef(self, butler: Any, dataRefList: Any): ...
    def run(self, wcs_md_tuple_list: Any, oldSkyMap: Optional[Any] = ...): ...
