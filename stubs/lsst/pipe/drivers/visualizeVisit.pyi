from lsst.afw.cameraGeom.utils import makeImageFromCamera as makeImageFromCamera
from lsst.ctrl.pool.parallel import BatchPoolTask as BatchPoolTask
from lsst.ctrl.pool.pool import Pool as Pool
from lsst.pex.config import Config as Config, Field as Field
from lsst.pipe.base import ArgumentParser as ArgumentParser
from typing import Any

def makeCameraImage(camera: Any, exposures: Any, binning: Any): ...

class VisualizeVisitConfig(Config):
    binning: Any = ...

class VisualizeVisitTask(BatchPoolTask):
    ConfigClass: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    @classmethod
    def batchWallTime(cls, time: Any, parsedCmd: Any, numCores: Any): ...
    def runDataRef(self, expRef: Any) -> None: ...
    def readImage(self, cache: Any, dataId: Any): ...
