from lsst.ctrl.pool.parallel import BatchCmdLineTask as BatchCmdLineTask
from lsst.ctrl.pool.pool import Pool as Pool, abortOnError as abortOnError, startPool as startPool
from lsst.pipe.base import Struct as Struct
from lsst.pipe.tasks.ingest import IngestError as IngestError, IngestTask as IngestTask
from typing import Any

class PoolIngestTask(BatchCmdLineTask, IngestTask):
    @classmethod
    def batchWallTime(cls, time: Any, parsedCmd: Any, numCores: Any): ...
    @classmethod
    def parseAndRun(cls, *args: Any, **kwargs: Any) -> None: ...
    def runFileWrapper(self, struct: Any, args: Any): ...
    def run(self, args: Any) -> None: ...
    def writeConfig(self, *args: Any, **kwargs: Any) -> None: ...
    def writeMetadata(self, *args: Any, **kwargs: Any) -> None: ...
