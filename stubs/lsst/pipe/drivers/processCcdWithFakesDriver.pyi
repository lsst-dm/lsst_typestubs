from lsst.ctrl.pool.parallel import BatchParallelTask as BatchParallelTask, BatchTaskRunner as BatchTaskRunner
from lsst.meas.base import PerTractCcdDataIdContainer as PerTractCcdDataIdContainer
from lsst.pex.config import Config as Config, ConfigurableField as ConfigurableField, Field as Field, ListField as ListField
from lsst.pipe.base import ArgumentParser as ArgumentParser
from lsst.pipe.tasks.postprocess import TransformSourceTableTask as TransformSourceTableTask, WriteSourceTableTask as WriteSourceTableTask
from lsst.pipe.tasks.processCcdWithFakes import ProcessCcdWithFakesTask as ProcessCcdWithFakesTask
from typing import Any

class ProcessCcdWithFakesDriverConfig(Config):
    processCcdWithFakes: Any = ...
    doMakeSourceTable: Any = ...
    doSaveWideSourceTable: Any = ...
    writeSourceTable: Any = ...
    transformSourceTable: Any = ...
    ignoreCcdList: Any = ...
    ccdKey: Any = ...

class ProcessCcdWithFakesTaskRunner(BatchTaskRunner): ...

class ProcessCcdWithFakesDriverTask(BatchParallelTask):
    ConfigClass: Any = ...
    RunnerClass: Any = ...
    ignoreCcds: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def runDataRef(self, sensorRef: Any): ...
