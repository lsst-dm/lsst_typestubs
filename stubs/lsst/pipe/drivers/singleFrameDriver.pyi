from lsst.ctrl.pool.parallel import BatchParallelTask as BatchParallelTask, BatchTaskRunner as BatchTaskRunner
from lsst.pex.config import Config as Config, ConfigurableField as ConfigurableField, Field as Field, ListField as ListField
from lsst.pipe.base import ArgumentParser as ArgumentParser, ButlerInitializedTaskRunner as ButlerInitializedTaskRunner, ConfigDatasetType as ConfigDatasetType
from lsst.pipe.tasks.postprocess import TransformSourceTableTask as TransformSourceTableTask, WriteSourceTableTask as WriteSourceTableTask
from lsst.pipe.tasks.processCcd import ProcessCcdTask as ProcessCcdTask
from typing import Any, Optional

class SingleFrameDriverConfig(Config):
    processCcd: Any = ...
    doMakeSourceTable: Any = ...
    doSaveWideSourceTable: Any = ...
    writeSourceTable: Any = ...
    transformSourceTable: Any = ...
    ignoreCcdList: Any = ...
    ccdKey: Any = ...

class SingleFrameTaskRunner(BatchTaskRunner, ButlerInitializedTaskRunner): ...

class SingleFrameDriverTask(BatchParallelTask):
    ConfigClass: Any = ...
    RunnerClass: Any = ...
    ignoreCcds: Any = ...
    def __init__(self, butler: Optional[Any] = ..., psfRefObjLoader: Optional[Any] = ..., astromRefObjLoader: Optional[Any] = ..., photoRefObjLoader: Optional[Any] = ..., *args: Any, **kwargs: Any) -> None: ...
    def runDataRef(self, sensorRef: Any): ...
