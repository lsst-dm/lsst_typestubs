import typing
from .connections import InputQuantizedConnection, OutputQuantizedConnection
from .struct import Struct
from lsst.daf.butler import Butler, DatasetRef, Quantum
from typing import Any

class ButlerQuantumContext:
    quantum: Any = ...
    registry: Any = ...
    allInputs: Any = ...
    allOutputs: Any = ...
    def __init__(self, butler: Butler, quantum: Quantum): ...
    def get(self, dataset: typing.Union[InputQuantizedConnection, typing.List[DatasetRef], DatasetRef]) -> object: ...
    def put(self, values: typing.Union[Struct, typing.List[typing.Any], object], dataset: typing.Union[OutputQuantizedConnection, typing.List[DatasetRef], DatasetRef]) -> Any: ...
