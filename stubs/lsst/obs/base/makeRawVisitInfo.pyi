from typing import Any, Optional

class MakeRawVisitInfo:
    log: Any = ...
    doStripHeader: Any = ...
    def __init__(self, log: Optional[Any] = ..., doStripHeader: bool = ...) -> None: ...
    def __call__(self, md: Any, exposureId: Any): ...
    def setArgDict(self, md: Any, argDict: Any) -> None: ...
    def getDateAvg(self, md: Any, exposureTime: Any) -> None: ...
    def getDarkTime(self, argDict: Any): ...
    def offsetDate(self, date: Any, offsetSec: Any): ...
    def popItem(self, md: Any, key: Any, default: Optional[Any] = ...): ...
    def popFloat(self, md: Any, key: Any): ...
    def popAngle(self, md: Any, key: Any, units: Any = ...): ...
    def popIsoDate(self, md: Any, key: Any, timesys: Optional[Any] = ...): ...
    def popMjdDate(self, md: Any, key: Any, timesys: Optional[Any] = ...): ...
    @staticmethod
    def eraFromLstAndLongitude(lst: Any, longitude: Any): ...
    @staticmethod
    def altitudeFromZenithDistance(zd: Any): ...
    @staticmethod
    def centigradeFromKelvin(tempK: Any): ...
    @staticmethod
    def pascalFromMBar(mbar: Any): ...
    @staticmethod
    def pascalFromMmHg(mmHg: Any): ...
    @staticmethod
    def pascalFromTorr(torr: Any): ...
    @staticmethod
    def defaultMetadata(value: Any, defaultValue: Any, minimum: Optional[Any] = ..., maximum: Optional[Any] = ...): ...
