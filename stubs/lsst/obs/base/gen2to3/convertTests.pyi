import abc
from lsst.obs.base.script import convert as convert
from lsst.utils import doImport as doImport
from typing import Any

class ConvertGen2To3TestCase(metaclass=abc.ABCMeta):
    gen2root: str = ...
    gen2calib: Any = ...
    @property
    @abc.abstractmethod
    def instrumentClassName(self) -> Any: ...
    @property
    def instrumentClass(self): ...
    @property
    def instrumentName(self): ...
    config: Any = ...
    biases: Any = ...
    biasName: str = ...
    flats: Any = ...
    flatName: str = ...
    darks: Any = ...
    darkName: str = ...
    kwargs: Any = ...
    refcats: Any = ...
    collections: Any = ...
    detectorKey: str = ...
    exposureKey: str = ...
    calibFilterType: str = ...
    skymapName: Any = ...
    skymapConfig: Any = ...
    gen3root: Any = ...
    gen2Butler: Any = ...
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...
    def check_raw(self, gen3Butler: Any, exposure: Any, detector: Any) -> None: ...
    def check_calibs(self, calibName: Any, calibIds: Any, gen3Butler: Any) -> None: ...
    def check_defects(self, gen3Butler: Any, detectors: Any) -> None: ...
    def check_refcat(self, gen3Butler: Any) -> None: ...
    def check_collections(self, gen3Butler: Any) -> None: ...
    def test_convert(self) -> None: ...

def setup_module(module: Any) -> None: ...
