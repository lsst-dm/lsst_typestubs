import abc
from lsst.verify.tasks import MetricConfig, MetricConnections, MetricTask
from typing import Any, Optional

class SingleMetadataMetricConnections(MetricConnections):
    metadata: Any = ...
    dimensions: Any = ...
    def __init__(self, *, config: Optional[Any] = ...) -> None: ...

class MetadataMetricConfig(MetricConfig):
    metadataDimensions: Any = ...

class _AbstractMetadataMetricTask(MetricTask, metaclass=abc.ABCMeta):
    @classmethod
    @abc.abstractmethod
    def getInputMetadataKeys(cls, config: Any) -> Any: ...

class MetadataMetricTask(_AbstractMetadataMetricTask, metaclass=abc.ABCMeta):
    ConfigClass: Any = ...
    @abc.abstractmethod
    def makeMeasurement(self, values: Any) -> Any: ...
    def run(self, metadata: Any): ...
