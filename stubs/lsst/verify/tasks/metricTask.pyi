import abc
import lsst.pipe.base as pipeBase
from typing import Any

class MetricComputationError(RuntimeError): ...

class MetricConnections(pipeBase.PipelineTaskConnections):
    measurement: Any = ...

class MetricConfig(pipeBase.PipelineTaskConfig):
    def validate(self) -> None: ...
    @property
    def metricName(self): ...

class MetricTask(pipeBase.PipelineTask, metaclass=abc.ABCMeta):
    ConfigClass: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    @abc.abstractmethod
    def run(self, **kwargs: Any) -> Any: ...
    def runQuantum(self, butlerQC: Any, inputRefs: Any, outputRefs: Any) -> None: ...
    def adaptArgsAndRun(self, inputData: Any, inputDataIds: Any, outputDataId: Any): ...
    @classmethod
    def getInputDatasetTypes(cls, config: Any): ...
    @classmethod
    def areInputDatasetsScalar(cls, config: Any): ...
    def addStandardMetadata(self, measurement: Any, outputDataId: Any) -> None: ...
