import abc
from lsst.pipe.base import Task
from lsst.verify.tasks import MetricConfig, MetricConnections, MetricTask
from typing import Any

class ConfigApdbLoader(Task):
    ConfigClass: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def run(self, config: Any): ...

class DirectApdbLoader(Task):
    ConfigClass: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def run(self, config: Any): ...

class ApdbMetricConnections(MetricConnections):
    dbInfo: Any = ...
    measurement: Any = ...

class ApdbMetricConfig(MetricConfig):
    dbLoader: Any = ...

class ApdbMetricTask(MetricTask, metaclass=abc.ABCMeta):
    ConfigClass: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    @abc.abstractmethod
    def makeMeasurement(self, dbHandle: Any, outputDataId: Any) -> Any: ...
    def run(self, dbInfo: Any, outputDataId: Any = ...): ...
    def runQuantum(self, butlerQC: Any, inputRefs: Any, outputRefs: Any) -> None: ...
