from .jsonmixin import JsonSerializationMixin
from typing import Any, Optional

class MeasurementSet(JsonSerializationMixin):
    def __init__(self, measurements: Optional[Any] = ...) -> None: ...
    @classmethod
    def deserialize(cls, measurements: Optional[Any] = ..., blob_set: Optional[Any] = ..., metric_set: Optional[Any] = ...): ...
    def __getitem__(self, key: Any): ...
    def __setitem__(self, key: Any, value: Any) -> None: ...
    def __len__(self): ...
    def __contains__(self, key: Any): ...
    def __delitem__(self, key: Any) -> None: ...
    def __iter__(self) -> Any: ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
    def __iadd__(self, other: Any): ...
    def keys(self): ...
    def items(self) -> None: ...
    def insert(self, measurement: Any) -> None: ...
    def update(self, other: Any) -> None: ...
    def refresh_metrics(self, metric_set: Any) -> None: ...
    @property
    def json(self): ...
