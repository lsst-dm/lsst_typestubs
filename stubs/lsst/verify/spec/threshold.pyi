from .base import Specification
from typing import Any, Optional

class ThresholdSpecification(Specification):
    threshold: Any = ...
    def __init__(self, name: Any, threshold: Any, operator_str: Any, **kwargs: Any) -> None: ...
    @property
    def type(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
    @property
    def datum(self): ...
    @classmethod
    def deserialize(cls, name: Optional[Any] = ..., threshold: Optional[Any] = ..., metric: Optional[Any] = ..., package: Optional[Any] = ..., **kwargs: Any): ...
    @property
    def operator_str(self): ...
    @operator_str.setter
    def operator_str(self, v: Any) -> None: ...
    @property
    def operator(self): ...
    @staticmethod
    def convert_operator_str(op_str: Any): ...
    def check(self, measurement: Any): ...
