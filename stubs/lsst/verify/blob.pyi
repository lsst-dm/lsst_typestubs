from .jsonmixin import JsonSerializationMixin
from typing import Any, Optional

class Blob(JsonSerializationMixin):
    def __init__(self, name: Any, **datums: Any) -> None: ...
    @property
    def name(self): ...
    @property
    def identifier(self): ...
    @classmethod
    def deserialize(cls, identifier: Optional[Any] = ..., name: Optional[Any] = ..., data: Optional[Any] = ...): ...
    @property
    def json(self): ...
    def __setitem__(self, key: Any, value: Any) -> None: ...
    def __getitem__(self, key: Any): ...
    def __delitem__(self, key: Any) -> None: ...
    def __len__(self): ...
    def __contains__(self, key: Any): ...
    def __iter__(self) -> Any: ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
    def keys(self): ...
    def items(self) -> None: ...
