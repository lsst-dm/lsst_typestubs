from typing import Any, Optional

class Name:
    def __init__(self, package: Optional[Any] = ..., metric: Optional[Any] = ..., spec: Optional[Any] = ...) -> None: ...
    @property
    def package(self): ...
    @property
    def metric(self): ...
    @property
    def spec(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
    def __lt__(self, other: Any) -> Any: ...
    def __gt__(self, other: Any) -> Any: ...
    def __le__(self, other: Any) -> Any: ...
    def __ge__(self, other: Any) -> Any: ...
    def __hash__(self) -> Any: ...
    def __contains__(self, name: Any): ...
    @property
    def has_package(self): ...
    @property
    def has_spec(self): ...
    @property
    def has_metric(self): ...
    @property
    def has_relative(self): ...
    @property
    def is_package(self): ...
    @property
    def is_metric(self): ...
    @property
    def is_spec(self): ...
    @property
    def is_fq(self): ...
    @property
    def is_relative(self): ...
    @property
    def fqn(self): ...
    @property
    def relative_name(self): ...
