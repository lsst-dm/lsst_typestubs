from .jsonmixin import JsonSerializationMixin
from typing import Any, Optional

class Metric(JsonSerializationMixin):
    description: Any = ...
    reference_doc: Any = ...
    reference_url: Any = ...
    reference_page: Any = ...
    def __init__(self, name: Any, description: Any, unit: Any, tags: Optional[Any] = ..., reference_doc: Optional[Any] = ..., reference_url: Optional[Any] = ..., reference_page: Optional[Any] = ...) -> None: ...
    @classmethod
    def deserialize(cls, name: Optional[Any] = ..., description: Optional[Any] = ..., unit: Optional[Any] = ..., tags: Optional[Any] = ..., reference: Optional[Any] = ...): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, value: Any) -> None: ...
    @property
    def unit(self): ...
    @unit.setter
    def unit(self, value: Any) -> None: ...
    @property
    def unit_str(self): ...
    @unit_str.setter
    def unit_str(self, value: Any) -> None: ...
    @property
    def tags(self): ...
    @tags.setter
    def tags(self, t: Any) -> None: ...
    @property
    def reference(self): ...
    @property
    def json(self): ...
    def check_unit(self, quantity: Any): ...
