import lsst.pipe.base as pexConfig
import lsst.pipe.base as pipeBase
from typing import Any, Optional

class FgcmCalibrateTractConfigBase(pexConfig.Config):
    fgcmBuildStars: Any = ...
    fgcmFitCycle: Any = ...
    fgcmOutputProducts: Any = ...
    convergenceTolerance: Any = ...
    maxFitCycles: Any = ...
    doDebuggingPlots: Any = ...
    def setDefaults(self) -> None: ...
    def validate(self) -> None: ...

class FgcmCalibrateTractRunner(pipeBase.ButlerInitializedTaskRunner):
    @staticmethod
    def getTargetList(parsedCmd: Any): ...
    def __call__(self, args: Any): ...
    def run(self, parsedCmd: Any): ...

class FgcmCalibrateTractBaseTask(pipeBase.CmdLineTask):
    def __init__(self, butler: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def runDataRef(self, butler: Any, dataRefs: Any): ...
