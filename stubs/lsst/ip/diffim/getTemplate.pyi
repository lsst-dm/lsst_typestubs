import lsst.pipe.base as pexConfig
import lsst.pipe.base as pipeBase
from typing import Any, Optional

class GetCoaddAsTemplateConfig(pexConfig.Config):
    templateBorderSize: Any = ...
    coaddName: Any = ...
    numSubfilters: Any = ...
    effectiveWavelength: Any = ...
    bandwidth: Any = ...
    warpType: Any = ...
    def validate(self) -> None: ...

class GetCoaddAsTemplateTask(pipeBase.Task):
    ConfigClass: Any = ...
    def runDataRef(self, exposure: Any, sensorRef: Any, templateIdList: Optional[Any] = ...): ...
    def runQuantum(self, exposure: Any, butlerQC: Any, skyMapRef: Any, coaddExposureRefs: Any): ...
    def getOverlapPatchList(self, exposure: Any, skyMap: Any): ...
    def run(self, tractInfo: Any, patchList: Any, skyCorners: Any, availableCoaddRefs: Any, sensorRef: Optional[Any] = ..., visitInfo: Optional[Any] = ...): ...
    def getCoaddDatasetName(self): ...

class GetCalexpAsTemplateConfig(pexConfig.Config):
    doAddCalexpBackground: Any = ...

class GetCalexpAsTemplateTask(pipeBase.Task):
    ConfigClass: Any = ...
    def run(self, exposure: Any, sensorRef: Any, templateIdList: Any): ...
    def runDataRef(self, *args: Any, **kwargs: Any): ...
    def runQuantum(self, **kwargs: Any) -> None: ...
