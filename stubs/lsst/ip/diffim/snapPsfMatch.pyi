from .imagePsfMatch import ImagePsfMatchConfig, ImagePsfMatchTask
from .psfMatch import PsfMatchConfigAL, PsfMatchConfigDF
from typing import Any, Optional

class SnapPsfMatchConfigDF(PsfMatchConfigDF):
    useRegularization: bool = ...
    usePcaForSpatialKernel: bool = ...
    subtractMeanForPca: bool = ...
    numPrincipalComponents: int = ...
    def setDefaults(self) -> None: ...

class SnapPsfMatchConfigAL(PsfMatchConfigAL):
    alardNGauss: int = ...
    alardDegGauss: Any = ...
    alardSigGauss: Any = ...
    def setDefaults(self) -> None: ...

class SnapPsfMatchConfig(ImagePsfMatchConfig):
    kernel: Any = ...
    doWarping: Any = ...
    def setDefaults(self) -> None: ...

class SnapPsfMatchTask(ImagePsfMatchTask):
    ConfigClass: Any = ...
    def subtractExposures(self, templateExposure: Any, scienceExposure: Any, templateFwhmPix: Optional[Any] = ..., scienceFwhmPix: Optional[Any] = ..., candidateList: Optional[Any] = ...): ...
