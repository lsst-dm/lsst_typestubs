from typing import Any, Optional

class KernelCandidateQa:
    fields: Any = ...
    def __init__(self, nKernelSpatial: Any) -> None: ...
    def makeMetricMap(self): ...
    def addToSchema(self, inSourceCatalog: Any): ...
    @classmethod
    def apply(cls, candidateList: Any, spatialKernel: Any, spatialBackground: Any, dof: int = ...) -> None: ...
    @staticmethod
    def aggregate(sourceCatalog: Any, metadata: Any, wcsresids: Any, diaSources: Optional[Any] = ...) -> None: ...
