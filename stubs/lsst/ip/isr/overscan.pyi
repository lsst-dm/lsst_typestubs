import lsst.pex.config as pexConfig
import lsst.pex.config as pipeBase
from typing import Any, Optional

class OverscanCorrectionTaskConfig(pexConfig.Config):
    fitType: Any = ...
    order: Any = ...
    numSigmaClip: Any = ...
    maskPlanes: Any = ...
    overscanIsInt: Any = ...

class OverscanCorrectionTask(pipeBase.Task):
    ConfigClass: Any = ...
    allowDebug: bool = ...
    statControl: Any = ...
    def __init__(self, statControl: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def run(self, ampImage: Any, overscanImage: Any, amp: Optional[Any] = ...): ...
    @staticmethod
    def integerConvert(image: Any): ...
    def measureConstantOverscan(self, image: Any): ...
    def getImageArray(self, image: Any): ...
    @staticmethod
    def transpose(imageArray: Any): ...
    def maskOutliers(self, imageArray: Any): ...
    @staticmethod
    def collapseArray(maskedArray: Any): ...
    def collapseArrayMedian(self, maskedArray: Any): ...
    def splineFit(self, indices: Any, collapsed: Any, numBins: Any): ...
    @staticmethod
    def splineEval(indices: Any, interp: Any): ...
    @staticmethod
    def maskExtrapolated(collapsed: Any): ...
    def measureVectorOverscan(self, image: Any): ...
    def debugView(self, image: Any, model: Any, amp: Optional[Any] = ...) -> None: ...
