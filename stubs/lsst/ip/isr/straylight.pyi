import abc
from abc import ABC, abstractmethod
from lsst.geom import Angle as Angle
from lsst.pex.config import Config as Config, Field as Field, ListField as ListField
from lsst.pipe.base import Task as Task
from typing import Any, Optional

class StrayLightConfig(Config):
    doRotatorAngleCorrection: Any = ...
    filters: Any = ...

class StrayLightTask(Task):
    ConfigClass: Any = ...
    def readIsrData(self, dataRef: Any, rawExposure: Any) -> None: ...
    def check(self, exposure: Any): ...
    def run(self, exposure: Any, strayLightData: Any) -> None: ...
    def checkFilter(self, exposure: Any): ...

class StrayLightData(ABC, metaclass=abc.ABCMeta):
    @abstractmethod
    def evaluate(self, angle_start: Angle, angle_end: Optional[Angle]=...) -> Any: ...
