import lsst.pipe.base as pexConfig
import lsst.pipe.base as pipeBase
from typing import Any, Optional

class MatchTolerance:
    maxMatchDist: Any = ...
    def __init__(self, maxMatchDist: Optional[Any] = ...) -> None: ...

class MatchOptimisticBConfig(pexConfig.Config):
    maxMatchDistArcSec: Any = ...
    numBrightStars: Any = ...
    minMatchedPairs: Any = ...
    minFracMatchedPairs: Any = ...
    maxOffsetPix: Any = ...
    maxRotationDeg: Any = ...
    allowedNonperpDeg: Any = ...
    numPointsForShape: Any = ...
    maxDeterminant: Any = ...

class MatchOptimisticBTask(pipeBase.Task):
    ConfigClass: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def filterStars(self, refCat: Any): ...
    def matchObjectsToSources(self, refCat: Any, sourceCat: Any, wcs: Any, sourceFluxField: Any, refFluxField: Any, match_tolerance: Optional[Any] = ...): ...
