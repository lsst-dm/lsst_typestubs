import lsst.afw.table
from .forcedPhotImage import ForcedPhotImageConfig, ForcedPhotImageTask
from typing import Any

class ForcedPhotCoaddConfig(ForcedPhotImageConfig):
    footprintDatasetName: Any = ...
    hasFakes: Any = ...
    def setDefaults(self) -> None: ...
    def validate(self) -> None: ...

class ForcedPhotCoaddRunner(lsst.pipe.base.ButlerInitializedTaskRunner):
    @staticmethod
    def getTargetList(parsedCmd: Any, **kwargs: Any): ...

class ForcedPhotCoaddTask(ForcedPhotImageTask):
    ConfigClass: Any = ...
    RunnerClass: Any = ...
    dataPrefix: str = ...
    def getExposure(self, dataRef: Any): ...
    def makeIdFactory(self, dataRef: Any): ...
    def getExposureId(self, dataRef: Any): ...
    def fetchReferences(self, dataRef: Any, exposure: Any): ...
    def attachFootprints(self, sources: Any, refCat: Any, exposure: Any, refWcs: Any, dataRef: Any): ...
