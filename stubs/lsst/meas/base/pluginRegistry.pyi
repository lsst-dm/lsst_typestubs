import collections
import lsst.pex.config
from typing import Any, Optional

def generateAlgorithmName(AlgClass: Any): ...

class PluginRegistry(lsst.pex.config.Registry):
    class Configurable:
        name: Any = ...
        PluginClass: Any = ...
        def __init__(self, name: Any, PluginClass: Any) -> None: ...
        @property
        def ConfigClass(self): ...
        def __call__(self, config: Any): ...
    def register(self, name: Any, PluginClass: Any, shouldApCorr: bool = ..., apCorrList: Any = ...) -> None: ...
    def makeField(self, doc: Any, default: Optional[Any] = ..., optional: bool = ..., multi: bool = ...): ...

def register(name: Any, shouldApCorr: bool = ..., apCorrList: Any = ...): ...

class PluginMap(collections.OrderedDict):
    def iter(self) -> None: ...
    def iterN(self) -> None: ...
