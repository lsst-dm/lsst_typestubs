from . import fitKernelParamsToImage as fitKernelParamsToImage, subtractPsf as subtractPsf
from typing import Any, Optional

keptPlots: bool

def splitId(oid: Any, asDict: bool = ...): ...
def showSourceSet(sSet: Any, xy0: Any = ..., display: Optional[Any] = ..., ctype: Any = ..., symb: str = ..., size: int = ...) -> None: ...
def showPsfSpatialCells(exposure: Any, psfCellSet: Any, nMaxPerCell: int = ..., showChi2: bool = ..., showMoments: bool = ..., symb: Optional[Any] = ..., ctype: Optional[Any] = ..., ctypeUnused: Optional[Any] = ..., ctypeBad: Optional[Any] = ..., size: int = ..., display: Optional[Any] = ...): ...
def showPsfCandidates(exposure: Any, psfCellSet: Any, psf: Optional[Any] = ..., display: Optional[Any] = ..., normalize: bool = ..., showBadCandidates: bool = ..., fitBasisComponents: bool = ..., variance: Optional[Any] = ..., chi: Optional[Any] = ...): ...
def makeSubplots(fig: Any, nx: int = ..., ny: int = ..., Nx: int = ..., Ny: int = ..., plottingArea: Any = ..., pxgutter: float = ..., pygutter: float = ..., xgutter: float = ..., ygutter: float = ..., headroom: float = ..., panelBorderWeight: int = ..., panelColor: str = ...): ...
def plotPsfSpatialModel(exposure: Any, psf: Any, psfCellSet: Any, showBadCandidates: bool = ..., numSample: int = ..., matchKernelAmplitudes: bool = ..., keepPlots: bool = ...) -> None: ...
def showPsf(psf: Any, eigenValues: Optional[Any] = ..., XY: Optional[Any] = ..., normalize: bool = ..., display: Optional[Any] = ...): ...
def showPsfMosaic(exposure: Any, psf: Optional[Any] = ..., nx: int = ..., ny: Optional[Any] = ..., showCenter: bool = ..., showEllipticity: bool = ..., showFwhm: bool = ..., stampSize: int = ..., display: Optional[Any] = ..., title: Optional[Any] = ...): ...
def showPsfResiduals(exposure: Any, sourceSet: Any, magType: str = ..., scale: int = ..., display: Optional[Any] = ...): ...
def saveSpatialCellSet(psfCellSet: Any, fileName: str = ..., display: Optional[Any] = ...) -> None: ...
