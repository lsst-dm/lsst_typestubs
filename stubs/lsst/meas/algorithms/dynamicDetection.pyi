from .detection import SourceDetectionConfig, SourceDetectionTask
from typing import Any, Optional

class DynamicDetectionConfig(SourceDetectionConfig):
    prelimThresholdFactor: Any = ...
    skyObjects: Any = ...
    doBackgroundTweak: Any = ...
    minNumSources: Any = ...
    def setDefaults(self) -> None: ...

class DynamicDetectionTask(SourceDetectionTask):
    ConfigClass: Any = ...
    skySchema: Any = ...
    skyMeasurement: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def calculateThreshold(self, exposure: Any, seed: Any, sigma: Optional[Any] = ...): ...
    def detectFootprints(self, exposure: Any, doSmooth: bool = ..., sigma: Optional[Any] = ..., clearMask: bool = ..., expId: Optional[Any] = ...): ...
    def tweakBackground(self, exposure: Any, bgLevel: Any, bgList: Optional[Any] = ...): ...
