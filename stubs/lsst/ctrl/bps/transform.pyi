from .bps_config import BpsConfig as BpsConfig
from .bps_utils import WhenToSaveQuantumGraphs as WhenToSaveQuantumGraphs, create_job_quantum_graph_filename as create_job_quantum_graph_filename, save_qg_subgraph as save_qg_subgraph
from .generic_workflow import GenericWorkflow as GenericWorkflow, GenericWorkflowFile as GenericWorkflowFile, GenericWorkflowJob as GenericWorkflowJob
from typing import Any

def transform(config: Any, clustered_quantum_graph: Any, prefix: Any): ...
def group_clusters_into_jobs(clustered_quanta_graph: Any, name: Any): ...
def update_job(config: Any, job: Any) -> None: ...
def add_workflow_init_nodes(config: Any, generic_workflow: Any) -> None: ...
def create_init_workflow(config: Any): ...
def create_command(config: Any, label: Any, qgraph_file: Any): ...
def create_job_values_universal(config: Any, generic_workflow: Any, prefix: Any) -> None: ...
def create_job_values_aggregate(config: Any, generic_workflow: Any) -> None: ...
def create_generic_workflow(config: Any, clustered_quanta_graph: Any, name: Any, prefix: Any): ...
def add_workflow_attributes(config: Any, generic_workflow: Any) -> None: ...
def create_generic_workflow_config(config: Any, prefix: Any): ...
