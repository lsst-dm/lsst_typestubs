import sqlalchemy
from ...core import DataCoordinateIterable, DimensionElement, DimensionRecord, NamedKeyDict, SkyPixDimension, TimespanDatabaseRepresentation
from ..interfaces import SkyPixDimensionRecordStorage
from ..queries import QueryBuilder
from typing import Iterable, Optional

class BasicSkyPixDimensionRecordStorage(SkyPixDimensionRecordStorage):
    def __init__(self, dimension: SkyPixDimension) -> None: ...
    @property
    def element(self) -> SkyPixDimension: ...
    def clearCaches(self) -> None: ...
    def join(self, builder: QueryBuilder, *, regions: Optional[NamedKeyDict[DimensionElement, sqlalchemy.sql.ColumnElement]]=..., timespans: Optional[NamedKeyDict[DimensionElement, TimespanDatabaseRepresentation]]=...) -> None: ...
    def insert(self, *records: DimensionRecord) -> None: ...
    def sync(self, record: DimensionRecord) -> bool: ...
    def fetch(self, dataIds: DataCoordinateIterable) -> Iterable[DimensionRecord]: ...
    def digestTables(self) -> Iterable[sqlalchemy.schema.Table]: ...
