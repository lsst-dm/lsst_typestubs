import sqlalchemy
from ...core import DatabaseDimensionElement
from ..interfaces import Database, DatabaseDimensionOverlapStorage, DatabaseDimensionRecordStorage, GovernorDimensionRecordStorage, StaticTablesContext
from typing import Any, Iterable, Optional, Tuple

class CrossFamilyDimensionOverlapStorage(DatabaseDimensionOverlapStorage):
    def __init__(self, db: Database, elementStorage: Tuple[DatabaseDimensionRecordStorage, DatabaseDimensionRecordStorage], governorStorage: Tuple[GovernorDimensionRecordStorage, GovernorDimensionRecordStorage], summaryTable: sqlalchemy.schema.Table, overlapTable: sqlalchemy.schema.Table) -> None: ...
    @classmethod
    def initialize(cls: Any, db: Database, elementStorage: Tuple[DatabaseDimensionRecordStorage, DatabaseDimensionRecordStorage], governorStorage: Tuple[GovernorDimensionRecordStorage, GovernorDimensionRecordStorage], context: Optional[StaticTablesContext]=...) -> DatabaseDimensionOverlapStorage: ...
    @property
    def elements(self) -> Tuple[DatabaseDimensionElement, DatabaseDimensionElement]: ...
    def digestTables(self) -> Iterable[sqlalchemy.schema.Table]: ...
