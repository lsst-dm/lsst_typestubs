from typing import Any, Dict, List, Optional, Tuple, Union

class DbAuthError(RuntimeError): ...
class DbAuthNotFoundError(DbAuthError): ...
class DbAuthPermissionsError(DbAuthError): ...

class DbAuth:
    authList: Any = ...
    def __init__(self, path: Optional[str]=..., envVar: Optional[str]=..., authList: Optional[List[Dict[str, str]]]=...) -> None: ...
    def getAuth(self, dialectname: str, username: Optional[str], host: Optional[str], port: Optional[Union[int, str]], database: str) -> Tuple[Optional[str], str]: ...
    def getUrl(self, url: str) -> str: ...
