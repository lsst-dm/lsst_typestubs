import boto3
from ..datastore import DatastoreTransaction
from ._butlerUri import ButlerURI
from .utils import NoTransaction
from typing import Any, Callable, Optional, Union

class Backoff:
    @staticmethod
    def expo(func: Callable, *args: Any, **kwargs: Any) -> Callable: ...
    @staticmethod
    def on_exception(func: Callable, *args: Any, **kwargs: Any) -> Callable: ...
backoff = Backoff

class ButlerS3URI(ButlerURI):
    @property
    def client(self) -> boto3.client: ...
    def exists(self) -> bool: ...
    def size(self) -> int: ...
    def remove(self) -> None: ...
    def read(self, size: int=...) -> bytes: ...
    def write(self, data: bytes, overwrite: bool=...) -> None: ...
    def mkdir(self) -> None: ...
    def transfer_from(self, src: ButlerURI, transfer: str=..., overwrite: bool=..., transaction: Optional[Union[DatastoreTransaction, NoTransaction]]=...) -> None: ...
