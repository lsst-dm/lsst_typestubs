from ._butlerUri import ButlerURI
from typing import Optional, Union

class Location:
    def __init__(self, datastoreRootUri: Union[None, ButlerURI, str], path: Union[ButlerURI, str]) -> None: ...
    @property
    def uri(self) -> ButlerURI: ...
    @property
    def path(self) -> str: ...
    @property
    def pathInStore(self) -> ButlerURI: ...
    @property
    def netloc(self) -> str: ...
    @property
    def relativeToPathRoot(self) -> str: ...
    def updateExtension(self, ext: Optional[str]) -> None: ...
    def getExtension(self) -> str: ...

class LocationFactory:
    def __init__(self, datastoreRoot: Union[ButlerURI, str]) -> None: ...
    @property
    def netloc(self) -> str: ...
    def fromPath(self, path: str) -> Location: ...
