from lsst.daf.butler import StorageClassDelegate
from typing import Any, Optional

def registerMetricsExample(butler: Any) -> None: ...

class MetricsExample:
    summary: Any = ...
    output: Any = ...
    data: Any = ...
    def __init__(self, summary: Optional[Any] = ..., output: Optional[Any] = ..., data: Optional[Any] = ...) -> None: ...
    def __eq__(self, other: Any) -> Any: ...
    def exportAsDict(self): ...
    @classmethod
    def makeFromDict(cls, exportDict: Any): ...

class ListDelegate(StorageClassDelegate):
    def handleParameters(self, inMemoryDataset: Any, parameters: Optional[Any] = ...): ...

class MetricsDelegate(StorageClassDelegate):
    def handleParameters(self, inMemoryDataset: Any, parameters: Optional[Any] = ...): ...
    def getComponent(self, composite: Any, componentName: str) -> Any: ...
    @classmethod
    def selectResponsibleComponent(cls: Any, readComponent: str, fromComponents: Any) -> str: ...
