import abc
from abc import abstractmethod
from lsst.daf.butler import DatasetRef, Datastore
from lsst.daf.butler.registry.interfaces import DatastoreRegistryBridge
from typing import Any, Iterable, Sequence

class GenericBaseDatastore(Datastore, metaclass=abc.ABCMeta):
    @property
    @abstractmethod
    def bridge(self) -> DatastoreRegistryBridge: ...
    @abstractmethod
    def addStoredItemInfo(self, refs: Iterable[DatasetRef], infos: Iterable[Any]) -> None: ...
    @abstractmethod
    def getStoredItemsInfo(self, ref: DatasetRef) -> Sequence[Any]: ...
    @abstractmethod
    def removeStoredItemInfo(self, ref: DatasetRef) -> None: ...
    def remove(self, ref: DatasetRef) -> None: ...
    def transfer(self, inputDatastore: Datastore, ref: DatasetRef) -> None: ...
