from ..core import DataCoordinate, DatasetRef, Datastore, DimensionElement, DimensionRecord, FileDataset
from ..registry import Registry
from ._interfaces import RepoExportBackend
from typing import Callable, Iterable, Optional, Union

class RepoExportContext:
    def __init__(self, registry: Registry, datastore: Datastore, backend: RepoExportBackend, *, directory: Optional[str]=..., transfer: Optional[str]=...): ...
    def saveCollection(self, name: str) -> None: ...
    def saveDimensionData(self, element: Union[str, DimensionElement], records: Iterable[Union[dict, DimensionRecord]]) -> None: ...
    def saveDataIds(self, dataIds: Iterable[DataCoordinate], *, elements: Optional[Iterable[Union[str, DimensionElement]]]=...) -> None: ...
    def saveDatasets(self, refs: Iterable[DatasetRef], *, elements: Optional[Iterable[Union[str, DimensionElement]]]=..., rewrite: Optional[Callable[[FileDataset], FileDataset]]=...) -> None: ...
