import yaml
from . import doImport as doImport, iterify as iterify
from typing import Any, Optional

class ButlerComposite:
    class ComponentInfo:
        datasetType: Any = ...
        obj: Any = ...
        setter: Any = ...
        getter: Any = ...
        subset: Any = ...
        inputOnly: Any = ...
        def __init__(self, datasetType: Any, obj: Any, setter: Any, getter: Any, subset: Any, inputOnly: Any) -> None: ...
    assembler: Any = ...
    disassembler: Any = ...
    python: Any = ...
    dataId: Any = ...
    mapper: Any = ...
    componentInfo: Any = ...
    repository: Any = ...
    def __init__(self, assembler: Any, disassembler: Any, python: Any, dataId: Any, mapper: Any) -> None: ...
    def add(self, id: Any, datasetType: Any, setter: Any, getter: Any, subset: Any, inputOnly: Any) -> None: ...
    def setRepository(self, repository: Any) -> None: ...
    def getRepository(self): ...
    def getPythonType(self): ...

class ButlerLocation(yaml.YAMLObject):
    yaml_tag: str = ...
    yaml_loader: Any = ...
    yaml_dumper: Any = ...
    pythonType: Any = ...
    cppType: Any = ...
    storageName: Any = ...
    mapper: Any = ...
    storage: Any = ...
    locationList: Any = ...
    additionalData: Any = ...
    dataId: Any = ...
    usedDataId: Any = ...
    datasetType: Any = ...
    def __init__(self, pythonType: Any, cppType: Any, storageName: Any, locationList: Any, dataId: Any, mapper: Any, storage: Any, usedDataId: Optional[Any] = ..., datasetType: Optional[Any] = ..., additionalData: Optional[Any] = ...) -> None: ...
    @staticmethod
    def to_yaml(dumper: Any, obj: Any): ...
    @staticmethod
    def from_yaml(loader: Any, node: Any): ...
    repository: Any = ...
    def setRepository(self, repository: Any) -> None: ...
    def getRepository(self): ...
    def getPythonType(self): ...
    def getCppType(self): ...
    def getStorageName(self): ...
    def getLocations(self): ...
    def getLocationsWithRoot(self): ...
    def getAdditionalData(self): ...
    def getStorage(self): ...
