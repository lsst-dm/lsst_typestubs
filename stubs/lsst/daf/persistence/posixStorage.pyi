from . import StorageInterface
from typing import Any, Optional

class PosixStorage(StorageInterface):
    log: Any = ...
    root: Any = ...
    def __init__(self, uri: Any, create: Any) -> None: ...
    @staticmethod
    def relativePath(fromPath: Any, toPath: Any): ...
    @staticmethod
    def absolutePath(fromPath: Any, relativePath: Any): ...
    @staticmethod
    def getRepositoryCfg(uri: Any): ...
    @staticmethod
    def putRepositoryCfg(cfg: Any, loc: Optional[Any] = ...) -> None: ...
    @staticmethod
    def getMapperClass(root: Any): ...
    @staticmethod
    def getParentSymlinkPath(root: Any): ...
    def write(self, butlerLocation: Any, obj: Any) -> None: ...
    def read(self, butlerLocation: Any): ...
    def butlerLocationExists(self, location: Any): ...
    def exists(self, location: Any): ...
    def locationWithRoot(self, location: Any): ...
    @staticmethod
    def v1RepoExists(root: Any): ...
    def copyFile(self, fromLocation: Any, toLocation: Any) -> None: ...
    def getLocalFile(self, path: Any): ...
    def instanceSearch(self, path: Any): ...
    @staticmethod
    def search(root: Any, path: Any, searchParents: bool = ...): ...
    @staticmethod
    def storageExists(uri: Any): ...
