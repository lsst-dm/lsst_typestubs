from . import DataId as DataId
from typing import Any, Optional

class ButlerSubset:
    GENERATION: int = ...
    butler: Any = ...
    datasetType: Any = ...
    dataId: Any = ...
    cache: Any = ...
    level: Any = ...
    def __init__(self, butler: Any, datasetType: Any, level: Any, dataId: Any) -> None: ...
    def __len__(self): ...
    def __iter__(self) -> Any: ...

class ButlerSubsetIterator:
    butlerSubset: Any = ...
    iter: Any = ...
    def __init__(self, butlerSubset: Any) -> None: ...
    def __iter__(self) -> Any: ...
    def __next__(self): ...

class ButlerDataRef:
    GENERATION: int = ...
    butlerSubset: Any = ...
    dataId: Any = ...
    def __init__(self, butlerSubset: Any, dataId: Any) -> None: ...
    def get(self, datasetType: Optional[Any] = ..., **rest: Any): ...
    def put(self, obj: Any, datasetType: Optional[Any] = ..., doBackup: bool = ..., **rest: Any) -> None: ...
    def getUri(self, datasetType: Optional[Any] = ..., write: bool = ..., **rest: Any): ...
    def subLevels(self): ...
    def subItems(self, level: Optional[Any] = ...): ...
    def datasetExists(self, datasetType: Optional[Any] = ..., write: bool = ..., **rest: Any): ...
    def getButler(self): ...
