import yaml
from lsst.daf.persistence import Policy as Policy
from typing import Any

class AccessCfg(Policy, yaml.YAMLObject):
    yaml_tag: str = ...
    def __init__(self, cls: Any, storageCfg: Any) -> None: ...

class Access:
    @classmethod
    def cfg(cls, storageCfg: Any): ...
    storage: Any = ...
    def __init__(self, cfg: Any) -> None: ...
    def mapperClass(self): ...
    def root(self): ...
    def locationWithRoot(self, location: Any): ...
    def setCfg(self, repoCfg: Any) -> None: ...
    def loadCfg(self): ...
    def write(self, butlerLocation: Any, obj: Any) -> None: ...
    def read(self, butlerLocation: Any): ...
    def exists(self, location: Any): ...
    def lookup(self, *args: Any, **kwargs: Any): ...
