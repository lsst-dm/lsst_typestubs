from .persistence import ReadProxyBase as ReadProxyBase
from typing import Any

class ReadProxy(ReadProxyBase):
    def __init__(self, func: Any) -> None: ...
    def __getattr__(self, attr: Any) -> None: ...
    def __setattr__(self, attr: Any, val: Any) -> None: ...
    def __delattr__(self, attr: Any) -> None: ...
    def __bool__(self): ...
    def __getitem__(self, arg: Any): ...
    def __setitem__(self, arg: Any, val: Any) -> None: ...
    def __delitem__(self, arg: Any) -> None: ...
    def __getslice__(self, i: Any, j: Any): ...
    def __setslice__(self, i: Any, j: Any, val: Any) -> None: ...
    def __delslice__(self, i: Any, j: Any) -> None: ...
    def __contains__(self, ob: Any): ...
    def __rdivmod__(self, ob: Any): ...
    def __pow__(self, *args: Any): ...
    def __ipow__(self, ob: Any): ...
    def __rpow__(self, ob: Any): ...

get_callback: Any
set_callback: Any
get_cache: Any
set_cache: Any
