import yaml
from . import ParentsMismatch as ParentsMismatch, Storage as Storage, doImport as doImport, iterify as iterify
from typing import Any

class RepositoryCfg(yaml.YAMLObject):
    yaml_tag: str = ...
    dirty: bool = ...
    def __init__(self, root: Any, mapper: Any, mapperArgs: Any, parents: Any, policy: Any) -> None: ...
    @staticmethod
    def v1Constructor(loader: Any, node: Any): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
    def extend(self, other: Any) -> None: ...
    def extendParents(self, newParents: Any) -> None: ...
    @property
    def root(self): ...
    @root.setter
    def root(self, root: Any) -> None: ...
    @property
    def mapper(self): ...
    @mapper.setter
    def mapper(self, mapper: Any) -> None: ...
    @property
    def mapperArgs(self): ...
    @mapperArgs.setter
    def mapperArgs(self, newDict: Any) -> None: ...
    @property
    def parents(self): ...
    def addParents(self, newParents: Any) -> None: ...
    @property
    def policy(self): ...
    @staticmethod
    def makeFromArgs(repositoryArgs: Any): ...
    def matchesArgs(self, repositoryArgs: Any): ...

loaderList: Any
