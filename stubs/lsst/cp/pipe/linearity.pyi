import lsst.pex.config as pexConfig
import lsst.pex.config as pipeBase
from typing import Any

class LinearitySolveConnections(pipeBase.PipelineTaskConnections):
    inputPtc: Any = ...
    camera: Any = ...
    outputLinearizer: Any = ...

class LinearitySolveConfig(pipeBase.PipelineTaskConfig):
    linearityType: Any = ...
    polynomialOrder: Any = ...
    splineKnots: Any = ...
    maxLookupTableAdu: Any = ...
    maxLinearAdu: Any = ...
    minLinearAdu: Any = ...
    nSigmaClipLinear: Any = ...

class LinearitySolveTask(pipeBase.PipelineTask, pipeBase.CmdLineTask):
    ConfigClass: Any = ...
    def runQuantum(self, butlerQC: Any, inputRefs: Any, outputRefs: Any) -> None: ...
    def run(self, inputPtc: Any, camera: Any, inputDims: Any): ...
    def debugFit(self, stepname: Any, xVector: Any, yVector: Any, yModel: Any, mask: Any, ampName: Any) -> None: ...

class MeasureLinearityConfig(pexConfig.Config):
    solver: Any = ...

class MeasureLinearityTask(pipeBase.CmdLineTask):
    ConfigClass: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def runDataRef(self, dataRef: Any): ...
