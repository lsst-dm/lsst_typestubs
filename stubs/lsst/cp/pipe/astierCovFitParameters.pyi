import numpy as np
from typing import Any, Optional

class Structure:
    slices: Any = ...
    def __init__(self, groups: Any) -> None: ...
    def __getitem__(self, arg: Any): ...
    def __iter__(self) -> Any: ...
    def __len__(self): ...

class StructArray(np.ndarray):
    def __new__(cls, array: Any, struct: Any = ...): ...
    struct: Any = ...
    def __array_finalize__(self, obj: Any) -> None: ...
    def __getitem__(self, args: Any): ...
    def __setitem__(self, args: Any, val: Any) -> None: ...
    def __getslice__(self, start: Any, stop: Any): ...
    def __reduce__(self): ...

class FitParameters:
    def __init__(self, groups: Any) -> None: ...
    def copy(self): ...
    def fix(self, keys: Any = ..., val: Optional[Any] = ...) -> None: ...
    def release(self, keys: Any = ...) -> None: ...
    def indexof(self, indices: Any = ...): ...
    def __getitem__(self, args: Any): ...
    def __setitem__(self, args: Any, val: Any) -> None: ...
    @property
    def free(self): ...
    @free.setter
    def free(self, val: Any) -> None: ...
    @property
    def full(self): ...
    @full.setter
    def full(self, val: Any) -> None: ...
