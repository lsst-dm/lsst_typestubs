from collections import namedtuple
from typing import Any, Optional

ColumnDef = namedtuple('ColumnDef', 'name type nullable default description unit ucd')

IndexDef = namedtuple('IndexDef', 'name type columns')

TableDef = namedtuple('TableDef', 'name description columns indices')

def make_minimal_dia_object_schema(): ...
def make_minimal_dia_source_schema(): ...

class ApdbSchema:
    objects: Any = ...
    objects_nightly: Any = ...
    objects_last: Any = ...
    sources: Any = ...
    forcedSources: Any = ...
    visits: Any = ...
    def __init__(self, engine: Any, dia_object_index: Any, dia_object_nightly: Any, schema_file: Any, extra_schema_file: Optional[Any] = ..., column_map: Optional[Any] = ..., afw_schemas: Optional[Any] = ..., prefix: str = ...) -> None: ...
    def makeSchema(self, drop: bool = ..., mysql_engine: str = ..., oracle_tablespace: Optional[Any] = ..., oracle_iot: bool = ...) -> None: ...
    def getAfwSchema(self, table_name: Any, columns: Optional[Any] = ...): ...
    def getAfwColumns(self, table_name: Any): ...
    def getColumnMap(self, table_name: Any): ...

# Names in __all__ with no definition:
#   ColumnDef
#   IndexDef
#   TableDef
