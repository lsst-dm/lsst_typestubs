import lsst.jointcal as pexConfig
import lsst.jointcal as pipeBase
from collections import namedtuple
from typing import Any, Optional

Photometry = namedtuple('Photometry', ['fit', 'model'])

Astrometry = namedtuple('Astrometry', ['fit', 'model', 'sky_to_tan_projection'])

class JointcalRunner(pipeBase.ButlerInitializedTaskRunner):
    @staticmethod
    def getTargetList(parsedCmd: Any, **kwargs: Any): ...
    def __call__(self, args: Any): ...

class JointcalConfig(pexConfig.Config):
    doAstrometry: Any = ...
    doPhotometry: Any = ...
    coaddName: Any = ...
    positionErrorPedestal: Any = ...
    photometryErrorPedestal: Any = ...
    matchCut: Any = ...
    minMeasurements: Any = ...
    minMeasuredStarsPerCcd: Any = ...
    minRefStarsPerCcd: Any = ...
    allowLineSearch: Any = ...
    astrometrySimpleOrder: Any = ...
    astrometryChipOrder: Any = ...
    astrometryVisitOrder: Any = ...
    useInputWcs: Any = ...
    astrometryModel: Any = ...
    photometryModel: Any = ...
    applyColorTerms: Any = ...
    colorterms: Any = ...
    photometryVisitOrder: Any = ...
    photometryDoRankUpdate: Any = ...
    astrometryDoRankUpdate: Any = ...
    outlierRejectSigma: Any = ...
    maxPhotometrySteps: Any = ...
    maxAstrometrySteps: Any = ...
    astrometryRefObjLoader: Any = ...
    photometryRefObjLoader: Any = ...
    sourceSelector: Any = ...
    astrometryReferenceSelector: Any = ...
    photometryReferenceSelector: Any = ...
    astrometryReferenceErr: Any = ...
    writeInitMatrix: Any = ...
    writeChi2FilesInitialFinal: Any = ...
    writeChi2FilesOuterLoop: Any = ...
    writeInitialModel: Any = ...
    debugOutputPath: Any = ...
    sourceFluxType: Any = ...
    def validate(self) -> None: ...
    def setDefaults(self) -> None: ...

class JointcalTask(pipeBase.CmdLineTask):
    ConfigClass: Any = ...
    RunnerClass: Any = ...
    profile_jointcal: Any = ...
    astrometryRefObjLoader: Any = ...
    photometryRefObjLoader: Any = ...
    job: Any = ...
    def __init__(self, butler: Optional[Any] = ..., profile_jointcal: bool = ..., **kwargs: Any) -> None: ...
    focalPlaneBBox: Any = ...
    def runDataRef(self, dataRefs: Any, profile_jointcal: bool = ...): ...
