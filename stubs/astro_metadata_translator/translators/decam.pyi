from .fits import FitsTranslator
from typing import Any, Optional

class DecamTranslator(FitsTranslator):
    name: str = ...
    supported_instrument: str = ...
    default_resource_root: Any = ...
    detector_names: Any = ...
    @classmethod
    def can_translate(cls, header: Any, filename: Optional[Any] = ...): ...
    def to_exposure_id(self): ...
    def to_observation_counter(self): ...
    def to_visit_id(self): ...
    def to_datetime_end(self): ...
    def to_physical_filter(self): ...
    def to_location(self): ...
    def to_observation_type(self): ...
    def to_tracking_radec(self): ...
    def to_altaz_begin(self): ...
    def to_detector_exposure_id(self): ...
    def to_detector_group(self): ...
    def to_detector_name(self): ...
    @classmethod
    def fix_header(cls, header: Any, instrument: Any, obsid: Any, filename: Optional[Any] = ...): ...
