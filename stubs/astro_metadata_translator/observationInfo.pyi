from typing import Any, Optional

class ObservationInfo:
    filename: Any = ...
    translator_class_name: str = ...
    def __init__(self, header: Any, filename: Optional[Any] = ..., translator_class: Optional[Any] = ..., pedantic: bool = ..., search_path: Optional[Any] = ..., required: Optional[Any] = ..., subset: Optional[Any] = ...) -> None: ...
    @property
    def cards_used(self): ...
    def stripped_header(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __lt__(self, other: Any) -> Any: ...
    def __gt__(self, other: Any) -> Any: ...
    @classmethod
    def makeObservationInfo(cls, **kwargs: Any): ...

def makeObservationInfo(**kwargs: Any): ...
