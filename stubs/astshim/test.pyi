import unittest
from .channel import Channel as Channel
from .fitsChan import FitsChan as FitsChan
from .polyMap import PolyMap as PolyMap
from .stream import StringStream as StringStream
from .xmlChan import XmlChan as XmlChan
from typing import Any, Optional

class ObjectTestCase(unittest.TestCase):
    def assertObjectsIdentical(self, obj1: Any, obj2: Any, checkType: bool = ...) -> None: ...
    def checkCopy(self, obj: Any) -> None: ...
    def checkPersistence(self, obj: Any, typeFromChannel: Optional[Any] = ...) -> None: ...

class MappingTestCase(ObjectTestCase):
    def checkRoundTrip(self, amap: Any, poslist: Any, rtol: float = ..., atol: float = ...) -> None: ...
    def checkBasicSimplify(self, amap: Any) -> None: ...
    def checkMappingPersistence(self, amap: Any, poslist: Any) -> None: ...
    def checkMemoryForCompoundObject(self, obj1: Any, obj2: Any, cmpObj: Any, isSeries: Any) -> None: ...

def makePolyMapCoeffs(nIn: Any, nOut: Any): ...
def makeTwoWayPolyMap(nIn: Any, nOut: Any): ...
def makeForwardPolyMap(nIn: Any, nOut: Any): ...
